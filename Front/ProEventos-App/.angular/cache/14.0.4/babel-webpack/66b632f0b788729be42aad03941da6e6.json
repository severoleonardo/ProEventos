{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n/** Default dropdown configuration */\n\nconst _c0 = function (a0) {\n  return {\n    dropdown: a0\n  };\n};\n\nconst _c1 = [\"*\"];\n\nclass BsDropdownConfig {\n  constructor() {\n    /** default dropdown auto closing behavior */\n    this.autoClose = true;\n    /** default dropdown auto closing behavior */\n\n    this.insideClick = false;\n    /** turn on/off animation */\n\n    this.isAnimated = false;\n    /** value true of stopOnClickPropagation allows event stopPropagation*/\n\n    this.stopOnClickPropagation = false;\n  }\n\n}\n\nBsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) {\n  return new (t || BsDropdownConfig)();\n};\n\nBsDropdownConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BsDropdownConfig,\n  factory: BsDropdownConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass BsDropdownState {\n  constructor() {\n    this.direction = 'down';\n    this.autoClose = true;\n    this.insideClick = false;\n    this.isAnimated = false;\n    this.stopOnClickPropagation = false;\n    this.isOpenChange = new EventEmitter();\n    this.isDisabledChange = new EventEmitter();\n    this.toggleClick = new EventEmitter();\n    this.counts = 0;\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\n\n}\n\nBsDropdownState.ɵfac = function BsDropdownState_Factory(t) {\n  return new (t || BsDropdownState)();\n};\n\nBsDropdownState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BsDropdownState,\n  factory: BsDropdownState.ɵfac,\n  providedIn: 'platform'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [style({\n  height: 0,\n  overflow: 'hidden'\n}), animate(DROPDOWN_ANIMATION_TIMING, style({\n  height: '*',\n  overflow: 'hidden'\n}))]; // todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\n\nclass BsDropdownContainerComponent {\n  constructor(_state, cd, _renderer, _element, _builder) {\n    this._state = _state;\n    this.cd = cd;\n    this._renderer = _renderer;\n    this._element = _element;\n    this.isOpen = false;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n    this._subscription = _state.isOpenChange.subscribe(value => {\n      this.isOpen = value;\n\n      const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n\n      this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n\n        if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n\n          this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n        }\n      }\n\n      if (dropdown && this._state.isAnimated) {\n        this._factoryDropDownAnimation.create(dropdown).play();\n      }\n\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  get direction() {\n    return this._state.direction;\n  }\n  /** @internal */\n\n\n  _contains(el) {\n    return this._element.nativeElement.contains(el);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n\n}\n\nBsDropdownContainerComponent.ɵfac = function BsDropdownContainerComponent_Factory(t) {\n  return new (t || BsDropdownContainerComponent)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\n\nBsDropdownContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BsDropdownContainerComponent,\n  selectors: [[\"bs-dropdown-container\"]],\n  hostAttrs: [2, \"display\", \"block\", \"position\", \"absolute\", \"z-index\", \"1040\"],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 9,\n  consts: [[3, \"ngClass\"]],\n  template: function BsDropdownContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropup\", ctx.direction === \"up\")(\"show\", ctx.isOpen)(\"open\", ctx.isOpen);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.direction === \"down\"));\n    }\n  },\n  dependencies: [i3.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-dropdown-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        style: 'display:block;position: absolute;z-index: 1040'\n      },\n      template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, null);\n})();\n\nclass BsDropdownDirective {\n  constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._viewContainerRef = _viewContainerRef;\n    this._cis = _cis;\n    this._state = _state;\n    this._config = _config;\n    /**\n     * This attribute indicates that the dropdown should be opened upwards\n     */\n\n    this.dropup = false; // todo: move to component loader\n\n    this._isInlineOpen = false;\n    this._isDisabled = false;\n    this._subscriptions = [];\n    this._isInited = false; // set initial dropdown state from config\n\n    this._state.autoClose = this._config.autoClose;\n    this._state.insideClick = this._config.insideClick;\n    this._state.isAnimated = this._config.isAnimated;\n    this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation); // create dropdown component loader\n\n    this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({\n      provide: BsDropdownState,\n      useValue: this._state\n    });\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n  }\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n\n\n  set autoClose(value) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose() {\n    return this._state.autoClose;\n  }\n  /**\n   * Indicates that dropdown will be animated\n   */\n\n\n  set isAnimated(value) {\n    this._state.isAnimated = value;\n  }\n\n  get isAnimated() {\n    return this._state.isAnimated;\n  }\n  /**\n   * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n   */\n\n\n  set insideClick(value) {\n    this._state.insideClick = value;\n  }\n\n  get insideClick() {\n    return this._state.insideClick;\n  }\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n\n\n  set isDisabled(value) {\n    this._isDisabled = value;\n\n    this._state.isDisabledChange.emit(value);\n\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled() {\n    return this._isDisabled;\n  }\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n\n\n  get isOpen() {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  get isBs4() {\n    return !isBs3();\n  }\n\n  get _showInline() {\n    return !this.container;\n  }\n\n  ngOnInit() {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n\n    this._isInited = true; // attach DOM listeners\n\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    }); // toggle visibility on toggle element click\n\n\n    this._subscriptions.push(this._state.toggleClick.subscribe(value => this.toggle(value))); // hide dropdown if set disabled while opened\n\n\n    this._subscriptions.push(this._state.isDisabledChange.pipe(filter(value => value)).subscribe(() => this.hide()));\n  }\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n\n\n  show() {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(dropdownMenu => {\n          this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n\n          this._inlinedMenu = this._dropdown._inlineViewRef;\n          this.addBs4Polyfills();\n\n          if (this._inlinedMenu) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n          }\n\n          this.playAnimation();\n        }) // swallow errors\n        .catch();\n      }\n\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n\n      this._state.isOpenChange.emit(true);\n\n      this.playAnimation();\n      return;\n    }\n\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup = this.dropup || typeof this.dropup !== 'undefined' && this.dropup;\n\n      this._state.direction = _dropup ? 'up' : 'down';\n\n      const _placement = this.placement || (_dropup ? 'top start' : 'bottom start'); // show dropdown\n\n\n      this._dropdown.attach(BsDropdownContainerComponent).to(this.container).position({\n        attachment: _placement\n      }).show({\n        content: dropdownMenu.templateRef,\n        placement: _placement\n      });\n\n      this._state.isOpenChange.emit(true);\n    }) // swallow error\n    .catch();\n  }\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n\n\n  hide() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n\n\n  toggle(value) {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n  /** @internal */\n\n\n  _contains(event) {\n    // todo: valorkin fix typings\n    return this._elementRef.nativeElement.contains(event.target) || this._dropdown.instance && this._dropdown.instance._contains(event.target);\n  }\n\n  navigationClick(event) {\n    const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n\n    if (!ref) {\n      return;\n    }\n\n    const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n    const allRef = ref.querySelectorAll('.dropdown-item');\n\n    switch (event.keyCode) {\n      case 38:\n        if (this._state.counts > 0) {\n          allRef[--this._state.counts].focus();\n        }\n\n        break;\n\n      case 40:\n        if (this._state.counts + 1 < allRef.length) {\n          if (firstActive.classList !== allRef[this._state.counts].classList) {\n            allRef[this._state.counts].focus();\n          } else {\n            allRef[++this._state.counts].focus();\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n\n    this._dropdown.dispose();\n  }\n\n  addBs4Polyfills() {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  playAnimation() {\n    if (this._state.isAnimated && this._inlinedMenu) {\n      setTimeout(() => {\n        if (this._inlinedMenu) {\n          this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n        }\n      });\n    }\n  }\n\n  addShowClass() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  removeShowClass() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  checkRightAlignment() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n    }\n  }\n\n  addDropupStyles() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n    }\n  }\n\n  removeDropupStyles() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n    }\n  }\n\n}\n\nBsDropdownDirective.ɵfac = function BsDropdownDirective_Factory(t) {\n  return new (t || BsDropdownDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.ComponentLoaderFactory), i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(BsDropdownConfig), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\n\nBsDropdownDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownDirective,\n  selectors: [[\"\", \"bsDropdown\", \"\"], [\"\", \"dropdown\", \"\"]],\n  hostVars: 6,\n  hostBindings: function BsDropdownDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.arrowDown\", function BsDropdownDirective_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.navigationClick($event);\n      })(\"keydown.arrowUp\", function BsDropdownDirective_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.navigationClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropup\", ctx.dropup)(\"open\", ctx.isOpen)(\"show\", ctx.isOpen && ctx.isBs4);\n    }\n  },\n  inputs: {\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    dropup: \"dropup\",\n    autoClose: \"autoClose\",\n    isAnimated: \"isAnimated\",\n    insideClick: \"insideClick\",\n    isDisabled: \"isDisabled\",\n    isOpen: \"isOpen\"\n  },\n  outputs: {\n    isOpenChange: \"isOpenChange\",\n    onShown: \"onShown\",\n    onHidden: \"onHidden\"\n  },\n  exportAs: [\"bs-dropdown\"],\n  features: [i0.ɵɵProvidersFeature([BsDropdownState])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdown], [dropdown]',\n      exportAs: 'bs-dropdown',\n      providers: [BsDropdownState],\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        '[class.dropup]': 'dropup',\n        '[class.open]': 'isOpen',\n        '[class.show]': 'isOpen && isBs4'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i1.ComponentLoaderFactory\n    }, {\n      type: BsDropdownState\n    }, {\n      type: BsDropdownConfig\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, {\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    dropup: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    isAnimated: [{\n      type: Input\n    }],\n    insideClick: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    isOpenChange: [{\n      type: Output\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    navigationClick: [{\n      type: HostListener,\n      args: ['keydown.arrowDown', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.arrowUp', ['$event']]\n    }]\n  });\n})();\n\nclass BsDropdownMenuDirective {\n  constructor(_state, _viewContainer, _templateRef) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\n\n}\n\nBsDropdownMenuDirective.ɵfac = function BsDropdownMenuDirective_Factory(t) {\n  return new (t || BsDropdownMenuDirective)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nBsDropdownMenuDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownMenuDirective,\n  selectors: [[\"\", \"bsDropdownMenu\", \"\"], [\"\", \"dropdownMenu\", \"\"]],\n  exportAs: [\"bs-dropdown-menu\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownMenuDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownMenu],[dropdownMenu]',\n      exportAs: 'bs-dropdown-menu'\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nclass BsDropdownToggleDirective {\n  constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dropdown = _dropdown;\n    this._element = _element;\n    this._renderer = _renderer;\n    this._state = _state;\n    this.isOpen = false;\n    this._subscriptions = []; // sync is open value with state\n\n    this._subscriptions.push(this._state.isOpenChange.subscribe(value => {\n      this.isOpen = value;\n\n      if (value) {\n        this._documentClickListener = this._renderer.listen('document', 'click', event => {\n          if (this._state.autoClose && event.button !== 2 && !this._element.nativeElement.contains(event.target) && !(this._state.insideClick && this._dropdown._contains(event))) {\n            this._state.toggleClick.emit(false);\n\n            this._changeDetectorRef.detectChanges();\n          }\n        });\n        this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n          if (this._state.autoClose) {\n            this._state.toggleClick.emit(false);\n\n            this._changeDetectorRef.detectChanges();\n          }\n        });\n      } else {\n        this._documentClickListener && this._documentClickListener();\n        this._escKeyUpListener && this._escKeyUpListener();\n      }\n    })); // populate disabled state\n\n\n    this._subscriptions.push(this._state.isDisabledChange.subscribe(value => this.isDisabled = value || void 0));\n  }\n\n  onClick(event) {\n    if (this._state.stopOnClickPropagation) {\n      event.stopPropagation();\n    }\n\n    if (this.isDisabled) {\n      return;\n    }\n\n    this._state.toggleClick.emit(true);\n  }\n\n  ngOnDestroy() {\n    if (this._documentClickListener) {\n      this._documentClickListener();\n    }\n\n    if (this._escKeyUpListener) {\n      this._escKeyUpListener();\n    }\n\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\n\n}\n\nBsDropdownToggleDirective.ɵfac = function BsDropdownToggleDirective_Factory(t) {\n  return new (t || BsDropdownToggleDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(BsDropdownDirective), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(BsDropdownState));\n};\n\nBsDropdownToggleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownToggleDirective,\n  selectors: [[\"\", \"bsDropdownToggle\", \"\"], [\"\", \"dropdownToggle\", \"\"]],\n  hostVars: 3,\n  hostBindings: function BsDropdownToggleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function BsDropdownToggleDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-haspopup\", true)(\"disabled\", ctx.isDisabled)(\"aria-expanded\", ctx.isOpen);\n    }\n  },\n  exportAs: [\"bs-dropdown-toggle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownToggleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownToggle],[dropdownToggle]',\n      exportAs: 'bs-dropdown-toggle',\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        '[attr.aria-haspopup]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: BsDropdownDirective\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: BsDropdownState\n    }];\n  }, {\n    isDisabled: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    isOpen: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass BsDropdownModule {\n  static forRoot() {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [ComponentLoaderFactory, PositioningService, BsDropdownState]\n    };\n  }\n\n}\n\nBsDropdownModule.ɵfac = function BsDropdownModule_Factory(t) {\n  return new (t || BsDropdownModule)();\n};\n\nBsDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BsDropdownModule\n});\nBsDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownContainerComponent, BsDropdownDirective],\n      exports: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownDirective],\n      entryComponents: [BsDropdownContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Component","ChangeDetectionStrategy","Directive","Input","Output","HostListener","HostBinding","NgModule","filter","i1","ComponentLoaderFactory","isBs3","i2","style","animate","i3","CommonModule","PositioningService","BsDropdownConfig","constructor","autoClose","insideClick","isAnimated","stopOnClickPropagation","ɵfac","ɵprov","type","args","providedIn","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","counts","dropdownMenu","Promise","resolve","resolveDropdownMenu","DROPDOWN_ANIMATION_TIMING","dropdownAnimation","height","overflow","BsDropdownContainerComponent","_state","cd","_renderer","_element","_builder","isOpen","_factoryDropDownAnimation","build","_subscription","subscribe","value","dropdown","nativeElement","querySelector","addClass","classList","contains","setStyle","create","play","markForCheck","detectChanges","_contains","el","ngOnDestroy","unsubscribe","ChangeDetectorRef","Renderer2","ElementRef","AnimationBuilder","ɵcmp","NgClass","selector","changeDetection","OnPush","host","template","BsDropdownDirective","_elementRef","_viewContainerRef","_cis","_config","dropup","_isInlineOpen","_isDisabled","_subscriptions","_isInited","_dropdown","createLoader","provide","useValue","onShown","onHidden","isDisabled","emit","hide","_showInline","isShown","show","isBs4","container","ngOnInit","listen","outsideClick","triggers","push","toggle","pipe","_inlinedMenu","then","attachInline","viewContainer","templateRef","_inlineViewRef","addBs4Polyfills","rootNodes","parentNode","playAnimation","catch","_dropup","_placement","placement","attach","to","position","attachment","content","removeShowClass","removeDropupStyles","event","target","instance","navigationClick","ref","firstActive","ownerDocument","activeElement","allRef","querySelectorAll","keyCode","focus","length","preventDefault","sub","dispose","addShowClass","checkRightAlignment","addDropupStyles","setTimeout","removeClass","isRightAligned","removeStyle","ViewContainerRef","ɵdir","exportAs","providers","BsDropdownMenuDirective","_viewContainer","_templateRef","TemplateRef","BsDropdownToggleDirective","_changeDetectorRef","_documentClickListener","button","_escKeyUpListener","onClick","stopPropagation","BsDropdownModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports","entryComponents"],"sources":["F:/projects/PROEVENTOS/Front/ProEventos-App/node_modules/ngx-bootstrap/dropdown/fesm2020/ngx-bootstrap-dropdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/** Default dropdown configuration */\nclass BsDropdownConfig {\n    constructor() {\n        /** default dropdown auto closing behavior */\n        this.autoClose = true;\n        /** default dropdown auto closing behavior */\n        this.insideClick = false;\n        /** turn on/off animation */\n        this.isAnimated = false;\n        /** value true of stopOnClickPropagation allows event stopPropagation*/\n        this.stopOnClickPropagation = false;\n    }\n}\nBsDropdownConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass BsDropdownState {\n    constructor() {\n        this.direction = 'down';\n        this.autoClose = true;\n        this.insideClick = false;\n        this.isAnimated = false;\n        this.stopOnClickPropagation = false;\n        this.isOpenChange = new EventEmitter();\n        this.isDisabledChange = new EventEmitter();\n        this.toggleClick = new EventEmitter();\n        this.counts = 0;\n        this.dropdownMenu = new Promise(resolve => {\n            this.resolveDropdownMenu = resolve;\n        });\n    }\n}\nBsDropdownState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownState, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [\n    style({ height: 0, overflow: 'hidden' }),\n    animate(DROPDOWN_ANIMATION_TIMING, style({ height: '*', overflow: 'hidden' }))\n];\n\n// todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\nclass BsDropdownContainerComponent {\n    constructor(_state, cd, _renderer, _element, _builder) {\n        this._state = _state;\n        this.cd = cd;\n        this._renderer = _renderer;\n        this._element = _element;\n        this.isOpen = false;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        this._subscription = _state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n            this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n            if (dropdown && !isBs3()) {\n                this._renderer.addClass(dropdown, 'show');\n                if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n                    this._renderer.setStyle(dropdown, 'left', 'auto');\n                    this._renderer.setStyle(dropdown, 'right', '0');\n                }\n                if (this.direction === 'up') {\n                    this._renderer.setStyle(dropdown, 'top', 'auto');\n                    this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n                }\n            }\n            if (dropdown && this._state.isAnimated) {\n                this._factoryDropDownAnimation.create(dropdown)\n                    .play();\n            }\n            this.cd.markForCheck();\n            this.cd.detectChanges();\n        });\n    }\n    get direction() {\n        return this._state.direction;\n    }\n    /** @internal */\n    _contains(el) {\n        return this._element.nativeElement.contains(el);\n    }\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n}\nBsDropdownContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownContainerComponent, deps: [{ token: BsDropdownState }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nBsDropdownContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownContainerComponent, selector: \"bs-dropdown-container\", host: { styleAttribute: \"display:block;position: absolute;z-index: 1040\" }, ngImport: i0, template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `, isInline: true, directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bs-dropdown-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        style: 'display:block;position: absolute;z-index: 1040'\n                    },\n                    template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.AnimationBuilder }]; } });\n\nclass BsDropdownDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._viewContainerRef = _viewContainerRef;\n        this._cis = _cis;\n        this._state = _state;\n        this._config = _config;\n        /**\n         * This attribute indicates that the dropdown should be opened upwards\n         */\n        this.dropup = false;\n        // todo: move to component loader\n        this._isInlineOpen = false;\n        this._isDisabled = false;\n        this._subscriptions = [];\n        this._isInited = false;\n        // set initial dropdown state from config\n        this._state.autoClose = this._config.autoClose;\n        this._state.insideClick = this._config.insideClick;\n        this._state.isAnimated = this._config.isAnimated;\n        this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        // create dropdown component loader\n        this._dropdown = this._cis\n            .createLoader(this._elementRef, this._viewContainerRef, this._renderer)\n            .provide({ provide: BsDropdownState, useValue: this._state });\n        this.onShown = this._dropdown.onShown;\n        this.onHidden = this._dropdown.onHidden;\n        this.isOpenChange = this._state.isOpenChange;\n    }\n    /**\n     * Indicates that dropdown will be closed on item or document click,\n     * and after pressing ESC\n     */\n    set autoClose(value) {\n        this._state.autoClose = value;\n    }\n    get autoClose() {\n        return this._state.autoClose;\n    }\n    /**\n     * Indicates that dropdown will be animated\n     */\n    set isAnimated(value) {\n        this._state.isAnimated = value;\n    }\n    get isAnimated() {\n        return this._state.isAnimated;\n    }\n    /**\n     * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n     */\n    set insideClick(value) {\n        this._state.insideClick = value;\n    }\n    get insideClick() {\n        return this._state.insideClick;\n    }\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     */\n    set isDisabled(value) {\n        this._isDisabled = value;\n        this._state.isDisabledChange.emit(value);\n        if (value) {\n            this.hide();\n        }\n    }\n    get isDisabled() {\n        return this._isDisabled;\n    }\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    get isOpen() {\n        if (this._showInline) {\n            return this._isInlineOpen;\n        }\n        return this._dropdown.isShown;\n    }\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    get isBs4() {\n        return !isBs3();\n    }\n    get _showInline() {\n        return !this.container;\n    }\n    ngOnInit() {\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        // attach DOM listeners\n        this._dropdown.listen({\n            // because of dropdown inline mode\n            outsideClick: false,\n            triggers: this.triggers,\n            show: () => this.show()\n        });\n        // toggle visibility on toggle element click\n        this._subscriptions.push(this._state.toggleClick.subscribe((value) => this.toggle(value)));\n        // hide dropdown if set disabled while opened\n        this._subscriptions.push(this._state.isDisabledChange\n            .pipe(filter((value) => value))\n            .subscribe(( /*value: boolean*/) => this.hide()));\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    show() {\n        if (this.isOpen || this.isDisabled) {\n            return;\n        }\n        if (this._showInline) {\n            if (!this._inlinedMenu) {\n                this._state.dropdownMenu.then((dropdownMenu) => {\n                    this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n                    this._inlinedMenu = this._dropdown._inlineViewRef;\n                    this.addBs4Polyfills();\n                    if (this._inlinedMenu) {\n                        this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n                    }\n                    this.playAnimation();\n                })\n                    // swallow errors\n                    .catch();\n            }\n            this.addBs4Polyfills();\n            this._isInlineOpen = true;\n            this.onShown.emit(true);\n            this._state.isOpenChange.emit(true);\n            this.playAnimation();\n            return;\n        }\n        this._state.dropdownMenu.then(dropdownMenu => {\n            // check direction in which dropdown should be opened\n            const _dropup = this.dropup ||\n                (typeof this.dropup !== 'undefined' && this.dropup);\n            this._state.direction = _dropup ? 'up' : 'down';\n            const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n            // show dropdown\n            this._dropdown\n                .attach(BsDropdownContainerComponent)\n                .to(this.container)\n                .position({ attachment: _placement })\n                .show({\n                content: dropdownMenu.templateRef,\n                placement: _placement\n            });\n            this._state.isOpenChange.emit(true);\n        })\n            // swallow error\n            .catch();\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    hide() {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._showInline) {\n            this.removeShowClass();\n            this.removeDropupStyles();\n            this._isInlineOpen = false;\n            this.onHidden.emit(true);\n        }\n        else {\n            this._dropdown.hide();\n        }\n        this._state.isOpenChange.emit(false);\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n     * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n     */\n    toggle(value) {\n        if (this.isOpen || !value) {\n            return this.hide();\n        }\n        return this.show();\n    }\n    /** @internal */\n    _contains(event) {\n        // todo: valorkin fix typings\n        return this._elementRef.nativeElement.contains(event.target) ||\n            (this._dropdown.instance && this._dropdown.instance._contains(event.target));\n    }\n    navigationClick(event) {\n        const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n        if (!ref) {\n            return;\n        }\n        const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n        const allRef = ref.querySelectorAll('.dropdown-item');\n        switch (event.keyCode) {\n            case 38:\n                if (this._state.counts > 0) {\n                    allRef[--this._state.counts].focus();\n                }\n                break;\n            case 40:\n                if (this._state.counts + 1 < allRef.length) {\n                    if (firstActive.classList !== allRef[this._state.counts].classList) {\n                        allRef[this._state.counts].focus();\n                    }\n                    else {\n                        allRef[++this._state.counts].focus();\n                    }\n                }\n                break;\n            default:\n        }\n        event.preventDefault();\n    }\n    ngOnDestroy() {\n        // clean up subscriptions and destroy dropdown\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n        this._dropdown.dispose();\n    }\n    addBs4Polyfills() {\n        if (!isBs3()) {\n            this.addShowClass();\n            this.checkRightAlignment();\n            this.addDropupStyles();\n        }\n    }\n    playAnimation() {\n        if (this._state.isAnimated && this._inlinedMenu) {\n            setTimeout(() => {\n                if (this._inlinedMenu) {\n                    this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n                }\n            });\n        }\n    }\n    addShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    removeShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    checkRightAlignment() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n        }\n    }\n    addDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            // a little hack to not break support of bootstrap 4 beta\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n        }\n    }\n    removeDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n        }\n    }\n}\nBsDropdownDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ViewContainerRef }, { token: i1.ComponentLoaderFactory }, { token: BsDropdownState }, { token: BsDropdownConfig }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownDirective, selector: \"[bsDropdown], [dropdown]\", inputs: { placement: \"placement\", triggers: \"triggers\", container: \"container\", dropup: \"dropup\", autoClose: \"autoClose\", isAnimated: \"isAnimated\", insideClick: \"insideClick\", isDisabled: \"isDisabled\", isOpen: \"isOpen\" }, outputs: { isOpenChange: \"isOpenChange\", onShown: \"onShown\", onHidden: \"onHidden\" }, host: { listeners: { \"keydown.arrowDown\": \"navigationClick($event)\", \"keydown.arrowUp\": \"navigationClick($event)\" }, properties: { \"class.dropup\": \"dropup\", \"class.open\": \"isOpen\", \"class.show\": \"isOpen && isBs4\" } }, providers: [BsDropdownState], exportAs: [\"bs-dropdown\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdown], [dropdown]',\n                    exportAs: 'bs-dropdown',\n                    providers: [BsDropdownState],\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[class.dropup]': 'dropup',\n                        '[class.open]': 'isOpen',\n                        '[class.show]': 'isOpen && isBs4'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ViewContainerRef }, { type: i1.ComponentLoaderFactory }, { type: BsDropdownState }, { type: BsDropdownConfig }, { type: i2.AnimationBuilder }]; }, propDecorators: { placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], dropup: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], isAnimated: [{\n                type: Input\n            }], insideClick: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }], isOpenChange: [{\n                type: Output\n            }], onShown: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], navigationClick: [{\n                type: HostListener,\n                args: ['keydown.arrowDown', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.arrowUp', ['$event']]\n            }] } });\n\nclass BsDropdownMenuDirective {\n    constructor(_state, _viewContainer, _templateRef) {\n        _state.resolveDropdownMenu({\n            templateRef: _templateRef,\n            viewContainer: _viewContainer\n        });\n    }\n}\nBsDropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownMenuDirective, deps: [{ token: BsDropdownState }, { token: i0.ViewContainerRef }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownMenuDirective, selector: \"[bsDropdownMenu],[dropdownMenu]\", exportAs: [\"bs-dropdown-menu\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownMenuDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownMenu],[dropdownMenu]',\n                    exportAs: 'bs-dropdown-menu'\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; } });\n\nclass BsDropdownToggleDirective {\n    constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dropdown = _dropdown;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._state = _state;\n        this.isOpen = false;\n        this._subscriptions = [];\n        // sync is open value with state\n        this._subscriptions.push(this._state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            if (value) {\n                this._documentClickListener = this._renderer.listen('document', 'click', (event) => {\n                    if (this._state.autoClose && event.button !== 2 &&\n                        !this._element.nativeElement.contains(event.target) &&\n                        !(this._state.insideClick && this._dropdown._contains(event))) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n                this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n                    if (this._state.autoClose) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n            }\n            else {\n                this._documentClickListener && this._documentClickListener();\n                this._escKeyUpListener && this._escKeyUpListener();\n            }\n        }));\n        // populate disabled state\n        this._subscriptions.push(this._state.isDisabledChange\n            .subscribe((value) => this.isDisabled = value || void 0));\n    }\n    onClick(event) {\n        if (this._state.stopOnClickPropagation) {\n            event.stopPropagation();\n        }\n        if (this.isDisabled) {\n            return;\n        }\n        this._state.toggleClick.emit(true);\n    }\n    ngOnDestroy() {\n        if (this._documentClickListener) {\n            this._documentClickListener();\n        }\n        if (this._escKeyUpListener) {\n            this._escKeyUpListener();\n        }\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n    }\n}\nBsDropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownToggleDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: BsDropdownDirective }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: BsDropdownState }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownToggleDirective, selector: \"[bsDropdownToggle],[dropdownToggle]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"attr.aria-haspopup\": \"true\", \"attr.disabled\": \"this.isDisabled\", \"attr.aria-expanded\": \"this.isOpen\" } }, exportAs: [\"bs-dropdown-toggle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownToggleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownToggle],[dropdownToggle]',\n                    exportAs: 'bs-dropdown-toggle',\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[attr.aria-haspopup]': 'true'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: BsDropdownDirective }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: BsDropdownState }]; }, propDecorators: { isDisabled: [{\n                type: HostBinding,\n                args: ['attr.disabled']\n            }], isOpen: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass BsDropdownModule {\n    static forRoot() {\n        return {\n            ngModule: BsDropdownModule,\n            providers: [\n                ComponentLoaderFactory,\n                PositioningService,\n                BsDropdownState\n            ]\n        };\n    }\n}\nBsDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBsDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, declarations: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownContainerComponent,\n        BsDropdownDirective], imports: [CommonModule], exports: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownDirective] });\nBsDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownContainerComponent,\n                        BsDropdownDirective\n                    ],\n                    exports: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownDirective\n                    ],\n                    entryComponents: [BsDropdownContainerComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}